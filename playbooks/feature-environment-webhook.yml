---
- name: Create a test environment for a feature branch
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Print tower_webhook_payload var
      ansible.builtin.debug:
        var: tower_webhook_payload

    - name: Collect required variables from tower webhook payload
      ansible.builtin.set_fact:
        # yamllint disable rule:line-length
        git_branch_name: "{{ tower_webhook_payload.ref | regex_search('feature\\/.*') }}"
        git_branch_create_event: "{{ tower_webhook_payload.before is regex('^0+$') }}"
        git_branch_delete_event: "{{ tower_webhook_payload.after is regex('^0+$') }}"
        # yamllint enable rule:line-length

    - name: Print collected variables for verification
      ansible.builtin.debug:
        msg:
          - "Git branch name: {{ git_branch_name }}"
          - "Branch create event: {{ git_branch_create_event }}"
          - "Branch delete event: {{ git_branch_delete_event }}"

    - block:
        - name: Create a project for the feature branch {{ git_branch_name }}
          ansible.controller.project:
            name: "Pipeline - Project for feature branch {{ git_branch_name }}"
            # yamllint disable-line rule:line-length
            description: "Environment for feature branch {{ git_branch_name }}"
            organization: "Pipeline"
            scm_type: git
            scm_url: "{{ tower_webhook_payload.repository.git_http_url }}"
            scm_branch: "{{ git_branch_name }}"
            scm_credential: "linux_gitlab_tower-linux-org"
            validate_certs: false
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"

        - name: Create job template for feature branch {{ git_branch_name }}
          #no_log: true
          ansible.controller.job_template:
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
            organization: "linux"
            # yamllint disable-line rule:line-length
            name: "LINUX - job template for feature branch {{ git_branch_name }}"
            description: "Job template for feature branch {{ git_branch_name }}"
            inventory: "LINUX - Linux-Test"
            job_type: "run"
            project: "LINUX - project for feature branch {{ git_branch_name }}"
            playbook: "poi-std.yml"
            ask_job_type_on_launch: "yes"
            ask_verbosity_on_launch: "yes"
            ask_inventory_on_launch: "yes"
            ask_limit_on_launch: "yes"
            job_slice_count: "1"
            timeout: 5400
            execution_environment: "linux - default - 21"
            credentials:
              - linux_execute
              - Linux_Vault
              - linux_csdlnx_token_p
            state: "present"
            timeout: "0"

      when:
        - git_branch_create_event | bool

    - block:
        - name: Delete job template for feature branch {{ git_branch_name }}
          # no_log: true
          ansible.controller.job_template:
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
            organization: "linux"
            # yamllint disable-line rule:line-length
            name: "LINUX - job template for feature branch {{ git_branch_name }}"
            description: "Job template for feature branch {{ git_branch_name }}"
            job_type: "run"
            project: "LINUX - project for feature branch {{ git_branch_name }}"
            playbook: "poi-std.yml"
            state: absent

        - name: Delete project for the feature branch {{ git_branch_name }}
          ansible.controller.project:
            name: "LINUX - project for feature branch {{ git_branch_name }}"
            # yamllint disable-line rule:line-length
            description: "Test environment for feature branch {{ git_branch_name }}"
            organization: "linux"
            scm_type: git
            scm_url: "{{ tower_webhook_payload.repository.git_http_url }}"
            scm_branch: "{{ git_branch_name }}"
            validate_certs: false
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
            state: absent
      when:
        - git_branch_delete_event | bool
