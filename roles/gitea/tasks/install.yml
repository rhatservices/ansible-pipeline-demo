---
- name: Get cluster base domain for Gitea route
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
  register: gitea_ocp_ingress_config

- name: Print ingress domain
  ansible.builtin.debug:
    var: gitea_ocp_ingress_config
    verbosity: 2

- name: Register fact with for the Gitea domain
  ansible.builtin.set_fact:
    gitea_domain: "{{ gitea_ocp_ingress_config.resources[0].spec.domain }}"

- name: Print gitea_domain variable
  ansible.builtin.debug:
    var: gitea_domain
    verbosity: 2

- name: Add Gitea helm repository
  kubernetes.core.helm_repository:
    name: gitea
    repo_url: https://dl.gitea.io/charts/
    force_update: true

- name: Create gitea namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ gitea_namespace}}"

# The gitea image uses a fixed UID, leverage the nonroot scc
- name: Allow default service account to use nonroot scc
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: gitea-nonroot
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:openshift:scc:nonroot
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: gitea

- name: Check if the Gitea statefulset is already available
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: StatefulSet
    name: gitea
    namespace: "{{ gitea_namespace }}"
  register: gitea_statefulset

- name: Print gitea statefulset
  ansible.builtin.debug:
    var: gitea_statefulset
    verbosity: 2

- name: Install Gitea via helm
  kubernetes.core.helm:
    name: gitea
    release_namespace: "{{ gitea_namespace }}"
    chart_ref: gitea/gitea
    chart_version: "{{ gitea_helm_version }}"
    values:
      gitea:
        config:
          server:
            ROOT_URL: "https://gitea.{{ gitea_domain }}"
          webhook:
            ALLOWED_HOST_LIST: private
      image:
        rootless: true
      # securityContext:
      #     capabilities:
      #       add: ["SYS_CHROOT"]
      postgresql:
        enabled: true
      postgresql-ha:
        enabled: false
      memcached:
        enabled: false
  when: gitea_statefulset.resources | length < 1

- name: Create OpenShift route
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        labels:
          app: gitea
        name: gitea-https
        namespace: "{{ gitea_namespace }}"
      spec:
        host: "gitea.{{ gitea_domain }}"
        port:
          targetPort: http
        to:
          kind: Service
          name: gitea-http
          weight: 100
        wildcardPolicy: None
        tls:
          termination: edge
          insecureEdgeTerminationPolicy: Redirect

- name: Wait for gitea pods to be running
  shell: kubectl get pods -o json -n gitea
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 30
  delay: 3

- name: Wait for Gitea to become available
  ansible.builtin.uri:
    url: "https://gitea.{{ gitea_domain }}/"
    validate_certs: no
  register: result
  until: "result.status == 200"
  retries: 20
  delay: 3
