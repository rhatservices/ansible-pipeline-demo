---
- name: Create the Pipeline organization
  ansible.controller.organization:
    name: Pipeline
    description: The Pipeline organization
    state: present
    # controller variables
    controller_username: admin
    controller_password: "{{ controller_password }}"
    controller_host: "{{ controller_url }}"
    validate_certs: false

# - name: Create a GIT credentials for accessing the Gitea repository
#   ansible.controller.credential:
#     name: Pipeline - Gitea token
#     description: Token to access Gitea
#     state: present
#     organization: Pipeline
#     credential_type: "GitHub Personal Access Token"
#     inputs:
#       token: "{{ gitea_developer_token }}"
#     # controller variables
#     controller_username: admin
#     controller_password: "{{ controller_password }}"
#     controller_host: "{{ controller_url }}"
#     validate_certs: false
#   when:
#     - gitea_developer_token is defined

- name: Create a project for our development branch
  ansible.controller.project:
    name: Pipeline - SOE - DEV
    description: SOE repository DEV branch
    state: present
    organization: Pipeline
    scm_url: "{{ gitea_url }}/{{ gitea_username }}/ansible-example-collection"
    scm_type: git
    scm_branch: development
    scm_update_on_launch: true
    # controller variables
    controller_username: admin
    controller_password: "{{ controller_password }}"
    controller_host: "{{ controller_url }}"
    validate_certs: false

- name: Create a project for our production branch
  ansible.controller.project:
    name: Pipeline - SOE - PROD
    description: SOE repository PROD branch
    state: present
    organization: Pipeline
    scm_url: "{{ gitea_url }}/{{ gitea_username }}/ansible-example-collection"
    scm_type: git
    scm_branch: production
    scm_update_on_launch: true
    # controller variables
    controller_username: admin
    controller_password: "{{ controller_password }}"
    controller_host: "{{ controller_url }}"
    validate_certs: false

- name: Create a job template for configuring development hosts
  ansible.controller.job_template:
    name: Pipeline - SOE - Development hosts
    description: Rollout SOE to development hosts
    state: present
    organization: Pipeline
    project: "Pipeline - SOE - DEV"
    playbook: "linux-soe.yml"
    inventory: "Demo Inventory"
    # controller variables
    controller_username: admin
    controller_password: "{{ controller_password }}"
    controller_host: "{{ controller_url }}"
    validate_certs: false

- name: Create a job template for configuring production hosts
  ansible.controller.job_template:
    name: Pipeline - SOE - Production hosts
    description: Rollout SOE to production hosts
    state: present
    organization: Pipeline
    project: "Pipeline - SOE - PROD"
    playbook: "linux-soe.yml"
    inventory: "Demo Inventory"
    # controller variables
    controller_username: admin
    controller_password: "{{ controller_password }}"
    controller_host: "{{ controller_url }}"
    validate_certs: false

- name: Create a job template for configuring feature environments
  ansible.controller.job_template:
    name: Pipeline - Gitea Webhook
    description: Used to create new feature environments
    state: present
    organization: Pipeline
    project: "Pipeline - SOE - DEV"
    playbook: "feature-environment-webhook.yml"
    inventory: "Demo Inventory"
    # controller variables
    controller_username: admin
    controller_password: "{{ controller_password }}"
    controller_host: "{{ controller_url }}"
    validate_certs: false
    webhook_service: github
    extra_vars:
      controller_url: "{{ controller_url }}"
      controller_oauthtoken: "{{ controller_token }}"
  register: controller_feature_env_webhook

- name: Print controller_feature_env_webhook
  ansible.builtin.debug:
    var: controller_feature_env_webhook
    verbosity: 2

# this is reused in the integration role. the webhook seems to be more stable
# if the ID is used and not the URL encoded name of the job
- name: Register variable storing the job id for the feature environment template
  ansible.builtin.set_fact:
    controller_feature_env_job_template_svc_url: "http://ctrl-service.ansible-automation-platform/api/v2/job_templates/{{ controller_feature_env_webhook.id }}"
    controller_feature_env_job_template_url: "{{ controller_url }}/api/v2/job_templates/{{ controller_feature_env_webhook.id }}"

- name: Print controller_feature_env_job_template_url
  ansible.builtin.debug:
    var: controller_feature_env_job_template_url
    verbosity: 2
